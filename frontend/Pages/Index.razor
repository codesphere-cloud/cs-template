@page "/"
@using frontend.Data
@inject RateService RateService

<PageTitle>Live Currency Exchange Rates</PageTitle>

<h1>Live Currency Exchange Rates</h1>

<p>Current exchange rates relative to USD:</p>

@if (isLoading)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <span class="ms-2">Loading currency rates...</span>
    </div>
}
else if (errorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        <strong>Error:</strong> @errorMessage
        <br />
        <button class="btn btn-outline-danger btn-sm mt-2" @onclick="LoadRates">
            <i class="bi bi-arrow-clockwise"></i> Retry
        </button>
    </div>
}
else if (rates != null && rates.Any())
{
    <div class="row">
        <div class="col-md-8">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">Currency</th>
                        <th scope="col">Rate (USD)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var rate in rates.OrderBy(r => r.Key))
                    {
                        <tr>
                            <td><strong>@rate.Key</strong></td>
                            <td>@rate.Value.ToString("F4")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    
    <div class="mt-3">
        <button class="btn btn-primary" @onclick="LoadRates">
            <i class="bi bi-arrow-clockwise"></i> Refresh Rates
        </button>
        <small class="text-muted ms-2">Last updated: @lastUpdated?.ToString("HH:mm:ss")</small>
    </div>
}
else
{
    <div class="alert alert-warning" role="alert">
        No currency rates available at the moment.
        <br />
        <button class="btn btn-outline-warning btn-sm mt-2" @onclick="LoadRates">
            <i class="bi bi-arrow-clockwise"></i> Try Again
        </button>
    </div>
}

@code {
    private Dictionary<string, double>? rates;
    private bool isLoading = true;
    private string? errorMessage;
    private DateTime? lastUpdated;

    protected override async Task OnInitializedAsync()
    {
        await LoadRates();
    }

    private async Task LoadRates()
    {
        isLoading = true;
        errorMessage = null;
        StateHasChanged();

        try
        {
            rates = await RateService.GetRatesAsync();
            
            if (rates == null)
            {
                errorMessage = "Failed to fetch currency rates. Please check your connection and try again.";
            }
            else
            {
                lastUpdated = DateTime.Now;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}
