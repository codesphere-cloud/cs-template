@page "/"
@using frontend.Data
@inject HelloService HelloService

<PageTitle>Hello World App</PageTitle>

<h1>Hello World App</h1>

<p>A simple frontend/backend demo with C# and .NET</p>

@if (isLoading)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <span class="ms-2">Loading...</span>
    </div>
}
else if (errorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        <strong>Error:</strong> @errorMessage
        <br />
        <button class="btn btn-outline-danger btn-sm mt-2" @onclick="LoadGreeting">
            <i class="bi bi-arrow-clockwise"></i> Retry
        </button>
    </div>
}
else if (greeting != null)
{
    <div class="card mt-4">
        <div class="card-body">
            <h2 class="card-title">@greeting</h2>
            <p class="card-text">This message was fetched from the backend API.</p>
            <button class="btn btn-primary" @onclick="LoadGreeting">
                <i class="bi bi-arrow-clockwise"></i> Refresh
            </button>
            <small class="text-muted ms-2">Last updated: @lastUpdated?.ToString("HH:mm:ss")</small>
        </div>
    </div>
}
else
{
    <div class="alert alert-warning" role="alert">
        No greeting available.
        <br />
        <button class="btn btn-outline-warning btn-sm mt-2" @onclick="LoadGreeting">
            <i class="bi bi-arrow-clockwise"></i> Try Again
        </button>
    </div>
}

@code {
    private string? greeting;
    private bool isLoading = true;
    private string? errorMessage;
    private DateTime? lastUpdated;

    protected override async Task OnInitializedAsync()
    {
        await LoadGreeting();
    }

    private async Task LoadGreeting()
    {
        isLoading = true;
        errorMessage = null;
        StateHasChanged();

        try
        {
            greeting = await HelloService.GetGreetingAsync();
            
            if (greeting == null)
            {
                errorMessage = "Failed to fetch greeting from backend. Please try again.";
            }
            else
            {
                lastUpdated = DateTime.Now;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}
